package com.evan.chat.data.source.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.evan.chat.data.source.model.Chat;
import com.evan.chat.data.source.model.Classify;
import com.evan.chat.data.source.model.Friend;
import com.evan.chat.data.source.model.Setting;
import com.evan.chat.data.source.model.User;

import com.evan.chat.data.source.dao.ChatDao;
import com.evan.chat.data.source.dao.ClassifyDao;
import com.evan.chat.data.source.dao.FriendDao;
import com.evan.chat.data.source.dao.SettingDao;
import com.evan.chat.data.source.dao.UserDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig chatDaoConfig;
    private final DaoConfig classifyDaoConfig;
    private final DaoConfig friendDaoConfig;
    private final DaoConfig settingDaoConfig;
    private final DaoConfig userDaoConfig;

    private final ChatDao chatDao;
    private final ClassifyDao classifyDao;
    private final FriendDao friendDao;
    private final SettingDao settingDao;
    private final UserDao userDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        chatDaoConfig = daoConfigMap.get(ChatDao.class).clone();
        chatDaoConfig.initIdentityScope(type);

        classifyDaoConfig = daoConfigMap.get(ClassifyDao.class).clone();
        classifyDaoConfig.initIdentityScope(type);

        friendDaoConfig = daoConfigMap.get(FriendDao.class).clone();
        friendDaoConfig.initIdentityScope(type);

        settingDaoConfig = daoConfigMap.get(SettingDao.class).clone();
        settingDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        chatDao = new ChatDao(chatDaoConfig, this);
        classifyDao = new ClassifyDao(classifyDaoConfig, this);
        friendDao = new FriendDao(friendDaoConfig, this);
        settingDao = new SettingDao(settingDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);

        registerDao(Chat.class, chatDao);
        registerDao(Classify.class, classifyDao);
        registerDao(Friend.class, friendDao);
        registerDao(Setting.class, settingDao);
        registerDao(User.class, userDao);
    }
    
    public void clear() {
        chatDaoConfig.clearIdentityScope();
        classifyDaoConfig.clearIdentityScope();
        friendDaoConfig.clearIdentityScope();
        settingDaoConfig.clearIdentityScope();
        userDaoConfig.clearIdentityScope();
    }

    public ChatDao getChatDao() {
        return chatDao;
    }

    public ClassifyDao getClassifyDao() {
        return classifyDao;
    }

    public FriendDao getFriendDao() {
        return friendDao;
    }

    public SettingDao getSettingDao() {
        return settingDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

}
